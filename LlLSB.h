#ifndef __LlLSB_H__
#define __LlLSB_H__

// Generated by OBNCPP 2019-04-09 on 2019-04-10T00:06:54

#include <Lolac/Ll_Global.h>
#include <Lolac/LlTexts.h>
#include <Lolac/LlOberon.h>

namespace Ll
{
	class LSB : public _Root
	{
	public:
		/* Lola System Compiler Base LSBX, 26.9.2015 */
		static LSB* _inst();
		LSB();
		~LSB();

		// CONST
		/* type forms */
		static const int bit = 0;
		static const int array = 1;
		static const int unit = 2;
		/* tags in output */
		static const int const_ = 1;
		static const int typ = 2;
		static const int var = 3;
		static const int lit = 4;
		static const int sel = 7;
		static const int range = 8;
		static const int cons = 9;
		static const int repl = 10;
		static const int not_ = 11;
		static const int and_ = 12;
		static const int mul = 13;
		static const int div = 14;
		static const int or_ = 15;
		static const int xor_ = 16;
		static const int add = 17;
		static const int sub = 18;
		static const int eql = 20;
		static const int neq = 21;
		static const int lss = 22;
		static const int geq = 23;
		static const int leq = 24;
		static const int gtr = 25;
		static const int then = 30;
		static const int else_ = 31;
		static const int ts = 32;
		static const int next = 33;

		// TYPE
		struct ItemDesc;
		struct ObjDesc;
		struct TypeDesc;
		struct ArrayTypeDesc;
		struct UnitTypeDesc;

		typedef ItemDesc* Item;
		typedef ObjDesc* Object;
		typedef TypeDesc* Type;
		typedef ArrayTypeDesc* ArrayType;
		typedef UnitTypeDesc* UnitType;
		struct ItemDesc : public _Root {
			Item a;
			Item b;
			int size;
			int tag;
			Type type;
			int val;
		};
		struct ObjDesc : public ItemDesc {
			bool marked;
			_FxArray<char,32> name;
			Object next;
		};
		struct TypeDesc : public _Root {
			int len;
			int size;
			Object typobj;
		};
		struct ArrayTypeDesc : public TypeDesc {
			Type eltyp;
		};
		struct UnitTypeDesc : public TypeDesc {
			Object firstobj;
		};

		// VAR
		Object root;
		Object top;
		Type bitType;
		Type integer_;
		Type string;
		ArrayType byteType;
		ArrayType wordType;
		_FxArray<char,32> modname;

		// PROC
		static void Register(_ValArray<char> name, Object list);

	};
}

#endif // __LlLSB_H__